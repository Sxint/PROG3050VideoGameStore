@model PROG3050VideoGameStore.ViewModels.ListVM

@{

    ViewData["Title"] = "Panel";
}




<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <link rel="stylesheet" href="~/css/Admin.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

</head>
<body>
    <br/>
    <input type="text" id="searchInput" placeholder="Search Games" />
    <!-- Tab Content for Tab 1 -->
    <div id="tab1" class="tab-content">
        <h2>List of Games</h2>
        <table id="gameTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Author</th>
                    <th>Price</th>
                </tr>
            </thead>

            <tbody id="tableBody">

                @if (Model.AllGames != null)
                {
                    for (int i = 0; i < Model.AllGames.Count; i++)
                    {

                        <tr>
                            <td>@Model.AllGames[i].Name</td>
                            <td>@Model.AllGames[i].Author</td>
                            <td>@Model.AllGames[i].Price</td>

                            <td>
                                <a asp-controller="Admin" asp-action="EditGame" asp-route-id="@Model.AllGames[i].Id" asp-route-profileId="@Model.ProfileId">Edit</a>
                                <span class="mx-1"> | </span>
                                <a asp-controller="Admin" asp-action="DeleteGame" asp-route-id="@Model.AllGames[i].Id" asp-route-profileId="@Model.ProfileId">Delete</a>
                              
                            </td>

                        </tr>


                    }

                }

            </tbody>
        </table>
        <br />
        <br />
         <ul id="pagination" class="pagination"></ul>
    </div>


    <!-- JavaScript for Tab Functionality -->
    <script src="~/js/AdminPanel.js">


    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var searchInput = document.getElementById("searchInput");
            var gameTable = document.getElementById("gameTable");
            var games = Array.from(gameTable.querySelectorAll("tbody tr")); // Array of all game rows
            var tableBody = document.getElementById("tableBody");
            var itemsPerPage = 5; // Number of items to display per page
            var currentPage = 1; // Current page
            var filteredGames = games; // Initialize with all games

            function displayGames(page) {
                var startIndex = (page - 1) * itemsPerPage;
                var endIndex = startIndex + itemsPerPage;

                // Clear the current page's content
                tableBody.innerHTML = "";

                // Display game rows for the current page
                for (var i = startIndex; i < endIndex && i < filteredGames.length; i++) {
                    tableBody.appendChild(filteredGames[i].cloneNode(true));
                }
            }

            function updatePagination() {
                var pageCount = Math.ceil(filteredGames.length / itemsPerPage);
                var pagination = document.getElementById("pagination");
                pagination.innerHTML = "";

                for (var i = 1; i <= pageCount; i++) {
                    var li = document.createElement("li");
                    var link = document.createElement("a");
                    link.textContent = "| "+i+" |";
                    link.href = "#";
                    li.appendChild(link);

                    link.addEventListener("click", function () {
                        var currentNumber = this.textContent.charAt(2);
                        currentPage = parseInt(currentNumber);
                        displayGames(currentPage);
                        updatePagination();
                    });

                    if (i === currentPage) {
                        li.classList.add("active");
                    }

                    pagination.appendChild(li);
                }
            }

            function filterGames(searchTerm) {
                filteredGames = games.filter(function (game) {
                    var name = game.querySelector("td:first-child").textContent.toLowerCase();
                    return name.includes(searchTerm);
                });

                currentPage = 1; // Reset to the first page when filtering
                displayGames(currentPage);
                updatePagination();
            }

            searchInput.addEventListener("input", function () {
                var searchTerm = searchInput.value.toLowerCase();
                filterGames(searchTerm);
            });

            // Initial setup
            displayGames(currentPage);
            updatePagination();
        });

    </script>
</body>
</html>
