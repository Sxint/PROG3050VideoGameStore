@model PROG3050VideoGameStore.ViewModels.AddAddressVM

<head>
    <link rel="stylesheet" href="~/css/LoginRegister.css" asp-append-version="true" />

    <style>
        .footer {
            position: relative !important;
        }
    </style>
</head>

<div class="mainForm" style="margin-top: 1%;">
    @using (Html.BeginForm(FormMethod.Post))
    {
        @Html.ValidationSummary(true)

        <h1>Address</h1>

        <div class="form-group message">

            <p> @ViewData["Message"]</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.FirstName)
            @Html.TextBoxFor(model => model.newUserAddress.FirstName, new { @class = "form-control",@id = "firstName" })
            @Html.ValidationMessageFor(model => model.newUserAddress.FirstName, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.LastName)
            @Html.TextBoxFor(model => model.newUserAddress.LastName, new { @class = "form-control",@id = "lastName" })
            @Html.ValidationMessageFor(model => model.newUserAddress.LastName, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.PhoneNumber)
            @Html.TextBoxFor(model => model.newUserAddress.PhoneNumber, new { @class = "form-control",@id = "phoneNumber" })
            @Html.ValidationMessageFor(model => model.newUserAddress.PhoneNumber, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.StreetAddress)
            @Html.TextBoxFor(model => model.newUserAddress.StreetAddress, new { @class = "form-control",@id = "streetAddress" })
            @Html.ValidationMessageFor(model => model.newUserAddress.StreetAddress, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.AptNumber)
            @Html.TextBoxFor(model => model.newUserAddress.AptNumber, new { @class = "form-control",@id = "aptNumber" })
            @Html.ValidationMessageFor(model => model.newUserAddress.AptNumber, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.Province)
            <select id="province" name="newUserAddress.Province" class="form-control" asp-for="@Model.newUserAddress.Province">
                <option value="YT">Yukon</option>
                <option value="NT">Northwest Territories</option>
                <option value="NU">Nunavut</option>
                <option value="NL">Newfoundland and Labrador</option>
                <option value="PE">Prince Edward Island</option>
                <option value="NS">Nova Scotia</option>
                <option value="NB">New Brunswick</option>
                <option value="QC">Quebec</option>
                <option value="ON">Ontario</option>
                <option value="MB">Manitoba</option>
                <option value="SK">Saskatchewan</option>
                <option value="AB">Alberta</option>
                <option value="BC">British Columbia</option>
            </select>

            @Html.ValidationMessageFor(model => model.newUserAddress.Province, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.City)
            @Html.TextBoxFor(model => model.newUserAddress.City, new { @class = "form-control",@id = "city" })
            @Html.ValidationMessageFor(model => model.newUserAddress.City, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.PostalCode)
            @Html.TextBoxFor(model => model.newUserAddress.PostalCode, new { @class = "form-control",@id = "postalCode" })
            @Html.ValidationMessageFor(model => model.newUserAddress.PostalCode, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.SameAsShipping)
            <input id="transferCheckbox" type="checkbox" name="newUserAddress.SameAsShipping" value="true" asp-for="@Model.newUserAddress.SameAsShipping">
            @Html.ValidationMessageFor(model => model.newUserAddress.SameAsShipping, "", new { @class = "validation-error" })
        </div>



        <h2 class="shipping"> Shipping Address</h2>

        <div class="form-group shipping">
            @Html.LabelFor(model => model.newUserAddress.StreetAddressShipping)
            @Html.TextBoxFor(model => model.newUserAddress.StreetAddressShipping, new { @class = "form-control",@id = "streetAddressShipping" })
            @Html.ValidationMessageFor(model => model.newUserAddress.StreetAddressShipping, "", new { @class = "validation-error" })
        </div>

        <div class="form-group shipping">
            @Html.LabelFor(model => model.newUserAddress.AptNumberShipping)
            @Html.TextBoxFor(model => model.newUserAddress.AptNumberShipping, new { @class = "form-control",@id = "aptNumberShipping" })
            @Html.ValidationMessageFor(model => model.newUserAddress.AptNumberShipping, "", new { @class = "validation-error" })
        </div>

        <div class="form-group shipping">
            @Html.LabelFor(model => model.newUserAddress.ProvinceShipping)
            <select id="provinceShipping" name="newUserAddress.ProvinceShipping" class="form-control" asp-for="@Model.newUserAddress.ProvinceShipping">
                <option value="YT">Yukon</option>
                <option value="NT">Northwest Territories</option>
                <option value="NU">Nunavut</option>
                <option value="NL">Newfoundland and Labrador</option>
                <option value="PE">Prince Edward Island</option>
                <option value="NS">Nova Scotia</option>
                <option value="NB">New Brunswick</option>
                <option value="QC">Quebec</option>
                <option value="ON">Ontario</option>
                <option value="MB">Manitoba</option>
                <option value="SK">Saskatchewan</option>
                <option value="AB">Alberta</option>
                <option value="BC">British Columbia</option>
            </select>

            @Html.ValidationMessageFor(model => model.newUserAddress.ProvinceShipping, "", new { @class = "validation-error" })
        </div>

        <div class="form-group shipping">
            @Html.LabelFor(model => model.newUserAddress.CityShipping)
            @Html.TextBoxFor(model => model.newUserAddress.CityShipping, new { @class = "form-control",@id = "cityShipping" })
            @Html.ValidationMessageFor(model => model.newUserAddress.CityShipping, "", new { @class = "validation-error" })
        </div>

        <div class="form-group shipping">
            @Html.LabelFor(model => model.newUserAddress.PostalCodeShipping)
            @Html.TextBoxFor(model => model.newUserAddress.PostalCodeShipping, new { @class = "form-control",@id = "postalCodeShipping" })
            @Html.ValidationMessageFor(model => model.newUserAddress.PostalCodeShipping, "", new { @class = "validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newUserAddress.DeliveryInstructions)
            @Html.TextBoxFor(model => model.newUserAddress.DeliveryInstructions, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.newUserAddress.DeliveryInstructions, "", new { @class = "validation-error" })
        </div>

        <div style="display: none;">

          
            @Html.TextBoxFor(model => model.ProfileId, new { @class = "form-control" })

        </div>
      
        <div class="form-group">
            <input type="submit" value="Submit" class="button btn btn-primary" />
        </div>
    }
</div>
<script>

    var streetAddress = document.getElementById('streetAddress');
    var streetAddressShipping = document.getElementById('streetAddressShipping');
    var aptNumber = document.getElementById('aptNumber');
    var aptNumberShipping = document.getElementById('aptNumberShipping');
    var province = document.getElementById('province');
    var provinceShipping = document.getElementById('provinceShipping');
    var city = document.getElementById('city');
    var cityShipping = document.getElementById('cityShipping');
    var postalCode = document.getElementById('postalCode');
    var postalCodeShipping = document.getElementById('postalCodeShipping');
    var transferCheckbox = document.getElementById('transferCheckbox');
    var submitButton = document.querySelector('input[type="submit"]');
    var messageContainer = document.querySelector('.form-group.message');
    var shippingSections = document.querySelectorAll('.shipping'); 


    transferCheckbox.addEventListener('change', function () {
        if (transferCheckbox.checked) {
            if (streetAddress.value && province.value && city.value && postalCode.value) {
                streetAddressShipping.value = streetAddress.value;
                aptNumberShipping.value = aptNumber.value;
                provinceShipping.value = province.value;
                cityShipping.value = city.value;
                postalCodeShipping.value = postalCode.value;

         
                shippingSections.forEach(function (shippingSection) {
                    shippingSection.style.display = 'none';
                });

                messageContainer.innerHTML = '<p>Address transferred successfully to the shipping section</p>';
            } else {
                messageContainer.innerHTML = '<p class="validation-error">Please fill in all required fields in the address section before transferring.</p>';
                transferCheckbox.checked = false;
            }
        } else {
   
            shippingSections.forEach(function (shippingSection) {
                shippingSection.style.display = 'block';
            });

            messageContainer.innerHTML = '';
        }
    });


    if (transferCheckbox.checked) {

        shippingSections.forEach(function (shippingSection) {
            shippingSection.style.display = 'none';
        });
    } else {
   
        shippingSections.forEach(function (shippingSection) {
            shippingSection.style.display = 'block';
        });
    }
</script>
