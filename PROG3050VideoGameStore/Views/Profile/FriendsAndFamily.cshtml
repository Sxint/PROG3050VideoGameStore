@model PROG3050VideoGameStore.ViewModels.AllFriendsVM;
@{
    ViewData["Title"] = "Panel";
}

<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <link rel="stylesheet" href="~/css/Admin.css" asp-append-version="true" />
</head>
<body>
    <br />
    <table id="gameTable">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
                <th></th>
            </tr>
        </thead>

        <tbody id="tableBody">

            @if (Model.AllGames != null)
            {

                for (int i = 0; i < Model.AllFriends.Count; i++)
                {
                    <tr>
                        <td>
                            @Model.AllFriends[i].Name
                        </td>
                        @*we should probably make a wish list controller*@
                        <a asp-controller="some_controller" asp-action="viewWishList" asp-route-id="@Model.AllFriends[i].ProfileId">View Wish List</a>
                        <td>@Model.AllGames[i].Price</td>


                        @*we might also need a friends and family controller*@
                        <td>
                            <a asp-controller="Games" asp-action="GameReviews" asp-route-id="@Model.AllGames[i].Id" asp-route-profileId="@Model.ProfileId">Remove Friend</a>
                        </td>



                    </tr>
                }
            }

        </tbody>
    </table>
    <br />
    <br />
    <ul id="pagination" class="pagination"></ul>
    <script>document.addEventListener("DOMContentLoaded", function () {
            var searchInput = document.getElementById("searchInput");
            var gameTable = document.getElementById("gameTable");
            var games = Array.from(gameTable.querySelectorAll("tbody tr")); // Array of all game rows
            var tableBody = document.getElementById("tableBody");
            var itemsPerPage = 5; // Number of items to display per page
            var currentPage = 1; // Current page
            var filteredGames = games; // Initialize with all games

            function displayGames(page) {
                var startIndex = (page - 1) * itemsPerPage;
                var endIndex = startIndex + itemsPerPage;

                // Clear the current page's content
                tableBody.innerHTML = "";

                // Display game rows for the current page
                for (var i = startIndex; i < endIndex && i < filteredGames.length; i++) {
                    tableBody.appendChild(filteredGames[i].cloneNode(true));
                }
            }

            function updatePagination() {
                var pageCount = Math.ceil(filteredGames.length / itemsPerPage);
                var pagination = document.getElementById("pagination");
                pagination.innerHTML = "";

                for (var i = 1; i <= pageCount; i++) {
                    var li = document.createElement("li");
                    var link = document.createElement("a");
                    link.textContent = "| " + i + " |";
                    link.href = "#";
                    li.appendChild(link);

                    link.addEventListener("click", function () {
                        var currentNumber = this.textContent.charAt(2);
                        currentPage = parseInt(currentNumber);
                        displayGames(currentPage);
                        updatePagination();
                    });

                    if (i === currentPage) {
                        li.classList.add("active");
                    }

                    pagination.appendChild(li);
                }
            }

            function filterGames(searchTerm) {
                filteredGames = games.filter(function (game) {
                    var name = game.querySelector("td:first-child").textContent.toLowerCase();
                    return name.includes(searchTerm);
                });

                currentPage = 1; // Reset to the first page when filtering
                displayGames(currentPage);
                updatePagination();
            }

            searchInput.addEventListener("input", function () {
                var searchTerm = searchInput.value.toLowerCase();
                filterGames(searchTerm);
            });

            // Initial setup
            displayGames(currentPage);
            updatePagination();
        });</script>
</body>
</html>
